name: Backend workflow

on:
  push:
    branches:
      - master
      - main

jobs:
  code-quality-check:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: test
          POSTGRES_USER: test
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.0"
          cache: false

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64
          args: --timeout=30m

      - name: Go test
        run: |
          go test -v -race -coverprofile=coverage.out -covermode=atomic ./...
          go tool cover -func=coverage.out

      - name: Generate HTML coverage report
        run: go tool cover -html=coverage.out -o coverage.html

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html

  version-tag:
    runs-on: ubuntu-latest
    needs: code-quality-check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Push version tag
        uses: falokut/version-tag-action@v1
        with:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-image:
    runs-on: ubuntu-latest
    needs: code-quality-check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Push Docker Image
        uses: falokut/docker-image-action@v1
        with:
          image_name: ${{ github.event.repository.name }}
          registry_username: ${{ secrets.DOCKER_USERNAME }}
          registry_password: ${{ secrets.DOCKER_PASSWORD }}
